name: Cross platform O0/O3 builds

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install tools
      run: sudo apt-get update && sudo apt-get install -y binutils

    - name: Build -O0
      run: |
        cmake -S . -B build_O0 -DCMAKE_CXX_FLAGS_INIT="-O0" -DCMAKE_BUILD_TYPE=Release
        cmake --build build_O0

    - name: Run -O0
      run: |
        ./build_O0/main
        size ./build_O0/main
        objdump -t ./build_O0/main
        readelf -S ./build_O0/main

    - name: Build -O3
      run: |
        cmake -S . -B build_O3 -DCMAKE_CXX_FLAGS_INIT="-O3" -DCMAKE_BUILD_TYPE=Release
        cmake --build build_O3

    - name: Run -O3
      run: |
        ./build_O3/main
        size ./build_O3/main
        objdump -t ./build_O3/main
        readelf -S ./build_O3/main

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build -O0
      run: |
        cmake -S . -B build_O0 -DCMAKE_CXX_FLAGS_INIT="-O0" -DCMAKE_BUILD_TYPE=Release
        cmake --build build_O0

    - name: Run -O0
      run: |
        ./build_O0/main
        size ./build_O0/main || echo "size not available"
        nm ./build_O0/main || echo "nm not available"
        otool -l ./build_O0/main || echo "otool not available"

    - name: Build -O3
      run: |
        cmake -S . -B build_O3 -DCMAKE_CXX_FLAGS_INIT="-O3" -DCMAKE_BUILD_TYPE=Release
        cmake --build build_O3

    - name: Run -O3
      run: |
        ./build_O3/main
        size ./build_O3/main || echo "size not available"
        nm ./build_O3/main || echo "nm not available"
        otool -l ./build_O3/main || echo "otool not available"

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Clang instead of MSVC
      run: |
        choco install llvm -y
        echo "CMAKE_CXX_COMPILER=clang++" >> $env:GITHUB_ENV

    - name: Build -O0
      shell: bash
      run: |
        cmake -S . -B build_O0 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS_INIT="-O0" -DCMAKE_BUILD_TYPE=Release
        cmake --build build_O0 --config Release

    - name: Run -O0
      shell: bash
      run: |
        ./build_O0/main.exe || ./build_O0/Release/main.exe
        objdump -t ./build_O0/Release/main.exe || echo "objdump not available"
        nm ./build_O0/Release/main.exe || echo "nm not available"

    - name: Build -O3
      shell: bash
      run: |
        cmake -S . -B build_O3 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS_INIT="-O3" -DCMAKE_BUILD_TYPE=Release
        cmake --build build_O3 --config Release

    - name: Run -O3
      shell: bash
      run: |
        ./build_O3/main.exe || ./build_O3/Release/main.exe
        objdump -t ./build_O3/Release/main.exe || echo "objdump not available"
        nm ./build_O3/Release/main.exe || echo "nm not available"
